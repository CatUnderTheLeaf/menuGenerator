#:kivy 2.0.0
<ButtonWithCross>:
    id: box
    size_hint: None,  None
    height: "26dp"
    padding: "15dp", 0, 0, 0
    text_color: 1, 1, 1, 1
    width:
        self.minimum_width - (dp(10) if DEVICE_TYPE == "desktop" else dp(20)) \
        if root.icon != 'close' else self.minimum_width

    canvas:
        Color:
            rgba: root.theme_cls.primary_color if not root.color else root.color
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: root.radius
    
    MDTextField:
        id: ingredientAmount
        text: root.amount
        pos_hint: {"center_y": .5}
        size_hint_x: None
        width: "60dp" if root.input else 0
        line_color_normal: 1, 1, 1, 1
        text_color: root.text_color if root.text_color else (root.theme_cls.text_color)
        current_hint_text_color: root.text_color if root.text_color else (root.theme_cls.text_color)

    MDLabel:
        adaptive_size: True
        -text_size: None, None
        pos_hint: {"center_y": .5}
        id: label
        text: root.text
        size_hint_x: None
        width: self.texture_size[0]
        color: root.text_color if root.text_color else (root.theme_cls.text_color)
        markup: True
    
    MDIconButton:
        id: lbl_ic
        icon: root.icon
        theme_text_color: "Custom"
        text_color: 1, 1, 1, 1
        adaptive_size: True
        pos_hint: {"center_y": .5}
        on_release: root.removeCustomWidget(root.parentId, root)

<MyToggleButton>:
    background_down: app.theme_cls.primary_dark

<IconToggleButton>:
    background_down: app.theme_cls.primary_dark
    background_normal: app.theme_cls.primary_color
    theme_text_color: "Custom"            
    md_bg_color: self.background_normal
    text_color: 1, 1, 1, 1
    text: " "
    on_release: root.parentWidget.updateNutrientRules(root.value)

<TextToggleButton>:
    font_color_normal: app.theme_cls.text_color
    font_color_down: app.theme_cls.primary_color
    theme_text_color: "Custom"

<TextRoundButton>:
    background_down: app.theme_cls.primary_dark
    background_normal: app.theme_cls.primary_color
    theme_text_color: "Custom"       
    text_color: 1, 1, 1, 1     
    md_bg_color: self.background_normal
    value: ""    

    canvas:
        Clear
        Color:
            rgba: root.md_bg_color
        Ellipse:
            size: self.size
            pos: self.pos
            source: self.source if hasattr(self, "source") else ""

    size: "48dp", "48dp"
    padding: (0, 0, 0, 0)

    MDLabel:
        adaptive_size: True
        -text_size: None, None
        pos_hint: {"center_y": .5}
        id: label
        text: root.text
        size_hint_x: None
        width: self.texture_size[0]
        color: root.text_color if root.text_color else (root.theme_cls.text_color)
        markup: True

<MyChip>:
    text_color: 1, 1, 1, 1
    _no_ripple_effect: True
    icon: ''
    icon_left: ''
    icon_right: ''

<updatedMDChip>:
    size_hint_y: None
    height: "36dp"
    spacing: "8dp"
    adaptive_width: True
    radius: 12 if self.radius == [0, 0, 0, 0] else self.radius
    padding:
        "12dp" if not self.icon_left else "4dp", \
        0, \
        "12dp" if not self.icon_right else "8dp", \
        0
    md_bg_color:
        app.theme_cls.primary_dark \
        if root.active else \
        app.theme_cls.primary_color        

    canvas.before:
        Color:
            rgba:
                self.line_color \
                if not self.disabled else \
                app.theme_cls.disabled_hint_text_color
        Line:
            width: 1
            rounded_rectangle:
                ( \
                self.x, \
                self.y, \
                self.width, \
                self.height, \
                *self.radius, \
                self.height \
                )

    MDRelativeLayout:
        id: relative_box
        size_hint: None, None
        size: ("24dp", "24dp") if root.icon_left else (0, 0)
        pos_hint: {"center_y": .5}
        radius: self.height / 2

        MDIcon:
            id: icon_left
            icon: root.icon_left
            size_hint: None, None
            size: ("28dp", "28dp") if root.icon_left else (0, 0)
            theme_text_color: "Custom"
            pos_hint: {"center_y": .5}
            pos: 0, -2
            text_color:
                ( \
                root.icon_left_color \
                if root.icon_left_color else \
                root.theme_cls.disabled_hint_text_color \
                ) \
                if not self.disabled else app.theme_cls.disabled_hint_text_color

        MDBoxLayout:
            id: icon_left_box
            size_hint: None, None
            radius: self.height / 2
            size: ("28dp", "28dp") if root.icon_left else (0, 0)
            pos: 0, -2

        MDIcon:
            id: check_icon
            icon: "check"
            pos_hint: {"center_y": 0.5}
            size_hint: None, None
            size: "28dp", "28dp"
            color: (1, 1, 1, 1) if not root.icon_check_color else root.icon_check_color
            pos: 2, -2

    MDLabel:
        id: label
        text: root.text
        adaptive_size: True
        markup: True
        pos_hint: {"center_y": .5}
        color:
            ( \
            root.text_color \
            if root.text_color else \
            root.theme_cls.disabled_hint_text_color \
            ) \
            if not self.disabled else app.theme_cls.disabled_hint_text_color

    MDIcon:
        id: icon_right
        icon: root.icon_right
        size_hint: None, None
        size: ("18dp", "18dp") if root.icon_right else (0, 0)
        font_size: "18sp" if root.icon_right else 0
        theme_text_color: "Custom"
        pos_hint: {"center_y": .5}
        text_color:
            ( \
            root.icon_right_color \
            if root.icon_right_color else \
            root.theme_cls.disabled_hint_text_color \
            ) \
            if not self.disabled else app.theme_cls.disabled_hint_text_color